import { Problem, Strategy } from "../Problem";
import ProblemManager from "../ProblemManager";
const title: string = "Zeckendorf Representation";
const description: string = "\nEach new term in the Fibonacci sequence is generated by adding the previous two terms.\nStarting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89.\n\nEvery positive integer can be uniquely written as a sum of nonconsecutive terms of the Fibonacci sequence. For example, 100 = 3 + 8 + 89.\nSuch a sum is called the Zeckendorf representation of the number.\n\nFor any integer n>0, let z(n) be the number of terms in the Zeckendorf representation of n.\nThus, z(5)\u2009=\u20091, z(14)\u2009=\u20092, z(100)\u2009=\u20093 etc.\nAlso, for 0<n<106, \u2211\u2009z(n)\u2009=\u20097894453.\n\nFind \u2211\u2009z(n) for 0<n<1017.\n";
const index: number = 297;
class Solution extends Strategy {
    public validateArgs(args: any[]) {
        throw new Error("Method not implemented.");
    }
    public solve(args: any[]) {
        throw new Error("Method not implemented.");
    }
}
const solution = new Solution();
const ProblemImplementation = new Problem(title, description, solution);
ProblemManager.register(index, ProblemImplementation);
