import { Problem, Strategy } from "../Problem";
import ProblemManager from "../ProblemManager";
const title: string = "Pythagorean tree";
const description: string = "\n\nThe Pythagorean tree is a fractal generated by the following procedure:\n\n\n\nStart with a unit square. Then, calling one of the sides its base (in the animation, the bottom side is the base):\n Attach a right triangle to the side opposite the base, with the hypotenuse coinciding with that side and with the sides in a 3-4-5 ratio. Note that the smaller side of the triangle must be on the 'right' side with respect to the base (see animation).\n Attach a square to each leg of the right triangle, with one of its sides coinciding with that leg.\n Repeat this procedure for both squares, considering as their bases the sides touching the triangle.\n\nThe resulting figure, after an infinite number of iterations, is the Pythagorean tree.\n\n\n\n\n\nIt can be shown that there exists at least one rectangle, whose sides are parallel to the largest square of the Pythagorean tree, which encloses the Pythagorean tree completely.\n\n\nFind the smallest area possible for such a bounding rectangle, and give your answer rounded to 10 decimal places.\n\n";
const index: number = 395;
class Solution extends Strategy {
    public validateArgs(args: any[]) {
        throw new Error("Method not implemented.");
    }
    public solve(args: any[]) {
        throw new Error("Method not implemented.");
    }
}
const solution = new Solution();
const ProblemImplementation = new Problem(title, description, solution);
ProblemManager.register(index, ProblemImplementation);
